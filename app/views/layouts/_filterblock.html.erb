<%
=begin 
	
	Locals: 
		- filter_type
		- tag_type
=end
%>


	<% if filter_type == 'TagSelect'%>
		<% tag_values = params[tag_type] %>
		<select data-placeholder="Choose <%= tag_type.titleize %>" multiple style="width:150px" data-tag-type="<%= tag_type %>" class="filter_chosen chosen_tags">
			<% Tag.get_names(tag_type).each do |t| %>
				<% tag_selected = !tag_values.nil? && tag_values.include?(t) %>
				<option <%="selected" if tag_selected %> value="<%=t%>"><%=t%></option>
			<% end %>
		</select>			
	<% end %>


    <% if filter_type == 'Tags' %>
		<span class="fabric_label_container"><span class="fabric_label">Tags</span></span>	
		<ul id="fabric_display_tags" class="fabric_tags">
			<% tag_values = params[:tags] %>
			<% Tag.all.each do |t| %>
				<% 
				# if !t.fabric.empty? 
				%>
					<% 
						tag_link = url_for(:tags => [t.tag_name])
						tag_selected = false
						if !tag_values.nil? && tag_values.include?(t.tag_name)
							tag_values.delete(t.tag_name)
							tag_link = url_for(:tags => tag_values)
							tag_selected = true
						end
						
					 %>
					<li <%= 'class=tag_selected' if tag_selected %> >
	
						<%= link_to t.tag_name, tag_link %>
					</li>
				<% 
				# end 
				%>
			<% end %>
		</ul>
	<% end %>


    <% if filter_type == 'show_tag_lis' %>
		<%
			# This block will render <li>s for specified tag type.
		%>
		<% tag_values = params[:tags] %>	
		<% Tag.get_names(tag_type).each do |t| %>
			<% 
				tag_link = url_for(:tags => [t])
				tag_selected = false
				if !tag_values.nil? && tag_values.include?(t)
					tag_values.delete(t)
					tag_link = url_for(:tags => tag_values)
					tag_selected = true
				end
				
			 %>
			<li <%= 'class=tag_selected' if tag_selected %> >

				<%= link_to t, tag_link %>
			</li>
		<% end %>
	<% end %>
	
    <% if filter_type == 'show_tags' %>
    	<span class="fabric_label_container"><span class="fabric_label">Tags</span></span>	
    	<ul class="fabric_show_tags front_page_tags">
    		<%= render :partial => 'layouts/filterblock', :locals => { :filter_type=> 'show_tag_lis', :tag_type => tag_type } %>
		</ul>
	<% end %>
	
    <% if filter_type == 'Width' %>
		<span class="fabric_label_container"><span class="fabric_label">Width</span></span>	
		<ul class="fabric_show_tags">
			<% filter_width = params[:width] %>
			<% Fabric.get_distinct_width.each do |w| %>
				<% 
				# if !t.fabric.empty? 
				%>
					<% 
						w_link = url_for(:width => w)
						w_selected = false
						if !filter_width.nil? && filter_width.to_i == w
							params_copy = params # Make a local copy of the parameters
							params_copy.delete(:width)
							w_link = url_for(params_copy)
							w_selected = true
						end
					 %>
					<li <%= 'class=tag_selected' if w_selected %> >
						<%= link_to w, w_link %>
					</li>
				<% 
				# end 
				%>
			<% end %>
		</ul>
	<% end %>


    <% if filter_type == 'Count' %>
		<span class="fabric_label_container"><span class="fabric_label">Count</span></span>		
		<ul class="fabric_show_tags">
			<% filter_count = params[:count] %>
			<% YarnCount.all.each do |y| %>
				<% 
				# if !t.fabric.empty? 
				%>
					<% 
						y_link = url_for(:count => y.full_count)
						y_selected = false
						if !filter_count.nil? && CGI::unescapeHTML(filter_count) == y.full_count
							params_copy = params # Make a local copy of the parameters
							params_copy.delete(:count)
							y_link = url_for(params_copy)
							y_selected = true
						end
					 %>
					<li <%= 'class=tag_selected' if y_selected %> >
						<%= link_to y.full_count, y_link %>						
					</li>
				<% 
				# end 
				%>
			<% end %>
		</ul>
	<% end %>
	
	
    <% if filter_type == 'Colors' %>
    
		<span class="fabric_label_container"><span class="fabric_label">Color</span></span>	
    	<% colors_array = [ "#FFFFFF",
    						"#FFFF00",
    						"#C0C0C0",
    						"#00FFFF",
    						"#00FF00",
    						"#808080",
    						"#808000",
    						"#FF00FF",
    						"#008080",
    						"#FF0000",
    						"#008000",
    						"#800080",
    						"#800000",
    						"#0000FF",
    						"#000080",
    						"#000000" ] %>
		<% ul_width = 25 * colors_array.length %>    	
		<% color = params[:color] %>									
		<% if !color.nil?
			params_copy = params # Make a local copy of the parameters
			params_copy.delete(:color)
			c_link = url_for(params_copy)
		%>
			<span class="selected_params"><%= link_to "[(x) remove color]", c_link %></span>
		<% end %>
		<ul class="fabric_color_palette" style="max-width: 200px; border:none;">										
			<% colors_array.each do |c| %>
				<% color_link = url_for(:color => c) %>
				<li class="fabric_color_block"><%= link_to "", color_link, :title => c, :style => "background-color:#{c}" %></li>
			<% end %>
		</ul>
			
		<% if !color.nil? %>
			<ul class="color_options_list">
				<li>
					<label class="color_label">Color Tolerance</label>
					<input id="color_value" type="text" size="3"></input>
					<div class="fabric_single_color", title=<%=color%> style=<%= "background-color:#{color}"%> ></div>
				</li>
				<li><div id="slider-range-min"></div></li>
				<li><button id="color_update">Update</button></li>
			</ul>
			<script>
				$(function() {
					
					tolerance_val = document.URL.match(/&tolerance=(\d+)/)
					tolerance_val = (tolerance_val != null) ? tolerance_val[1] : 15;
					
					$( "#slider-range-min" ).slider({
						range: "min",
						value: tolerance_val,
						min: 1,
						max: 50,
						slide: function( event, ui ) {
							$( "#color_value" ).val(ui.value);
						}
					});
					$( "#color_value" ).val($( "#slider-range-min" ).slider( "value" ) );
					$("#color_update").click(function() {
						var current_url = document.URL;
						var tol_value = $( "#color_value" ).val();
						var tol_string = '&tolerance='+tol_value;
						// find tolerance
						if (current_url.indexOf('tolerance') < 0) {
							// toerance not found
							current_url += tol_string;
						}
						else {
							current_url = current_url.replace(/&tolerance=[\d]*/, tol_string);
						}
						window.location = current_url;
						
					});
				});
			</script>
		<% end %>

<!--		
               <p id="colorpickerHolder"></p>	
		<script>
			$(function() {
				$('#colorpickerHolder').ColorPicker({flat: true});
			});
		</script>
-->
	<% end %>
	
    <% if filter_type == 'ColorBar' %>
    	<% colors_array = [ "#FFFFFF",
    						"#FFFF00",
    						"#C0C0C0",
    						"#00FFFF",
    						"#00FF00",
    						"#808080",
    						"#808000",
    						"#FF00FF",
    						"#008080",
    						"#FF0000",
    						"#008000",
    						"#800080",
    						"#800000",
    						"#0000FF",
    						"#000080",
    						"#000000",
    										] %>
		<% ul_width = 30 * colors_array.length %>    										
		<ul class="fabric_color_palette" style="max-width: <%= ul_width %>px; height:20px">										
			<% colors_array.each do |c| %>
				<li class="fabric_color_block" style="background-color: <%= c %>; height: 20px; width: 30px"></li>
			<% end %>
		</ul>
	<% end %>	

	